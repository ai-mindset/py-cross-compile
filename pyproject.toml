[build-system]
requires = ["setuptools>=75.3.0", "wheel>=0.44.0"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf_converter"
version = "1.0.0"
description = "GUI application for converting PDF to text with cross-compilation capabilities"
requires-python = ">=3.12"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }, # Intentionally leaving this empty
]
keywords = ["pdf", "markdown", "converter", "pypdf", "cross-compilation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Desktop Environment",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Text Processing :: Markup :: Markdown",
    "Typing :: Typed",
]

dependencies = ["pypdf>=5.1.0", "typing-extensions>=4.9.0"]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-timeout>=2.3.1",
    "pytest-xvfb>=3.0.0",     # Virtual display for GUI tests

    # Linting & Formatting
    "ruff>=0.7.2",

    # Type Checking
    "mypy>=1.13.0",

    # Build & Package
    "pyinstaller>=6.11.0",

    # Security
    "bandit>=1.7.10",
    "safety",         # Skip pinning a version, to avoid dependency clashing
    "jinja2>=3.1.1",  # pin here (transitive dependency) to secure version

    # REPL
    "ipython",
]

[project.urls]
Homepage = "https://github.com/ai-mindset/py-cross-compile"
Documentation = "https://github.com/ai-mindset/py-cross-compile#readme"
Repository = "https://github.com/ai-mindset/py-cross-compile.git"
Issues = "https://github.com/ai-mindset/py-cross-compile/issues"
Changelog = "https://github.com/ai-mindset/py-cross-compile/blob/main/CHANGELOG.md"

[project.scripts]
docling-converter = "pdf_converter.app:main"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["pdf_converter"]

[tool.setuptools.package-data]
"docling_converter" = ["resources/*"]

[tool.pytest.ini_options]
minversion = "8.3"
addopts = """
    --strict-markers
    --strict-config
    --cov=src/docling_converter
    --cov-report=term-missing
    --cov-report=xml
    --timeout=300
    -ra
"""
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["."]
filterwarnings = ["error", "ignore::DeprecationWarning", "ignore::UserWarning"]

[tool.ruff]
target-version = "py312"
line-length = 88
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "B", "Q", "I", "N", "W", "C90", "UP", "ASYNC", "S", "BLE"]
ignore = ["D203", "D212", "ANN101", "ANN102"]
fixable = ["I", "F", "W", "UP", "Q"]
unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S105", "S106", "ANN"]
"*/__init__.py" = ["F401"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_decorators = false
disallow_untyped_defs = false
