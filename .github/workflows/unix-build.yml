name: Unix Build and Release

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    branches: [main]

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build for ${{ matrix.platform }}-${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: ubuntu-latest
            platform: linux
            arch: aarch64
          - os: ubuntu-latest
            platform: macos
            arch: x86_64
          - os: ubuntu-latest
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Set up QEMU
        if: matrix.arch == 'aarch64' || matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install cross-compilation tools
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build with PyInstaller
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}
        run: |
          pyinstaller --clean --onefile \
            --name "pdf-converter-$PLATFORM-$ARCH" \
            src/pdf_converter/app.py

      # - name: Create ZIP archive
      #   run: |
      #     cd dist
      #     zip "pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}.zip" "pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}"

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}
      #     path: dist/pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}.zip

      - name: Create TAR.GZ archive
        run: |
          cd dist
          if [ -f "pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}" ]; then
            tar -czf "pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz" "pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}"
            echo "dist_empty=false" >> $GITHUB_ENV
          else
            echo "No executable found in dist/"
            echo "dist_empty=true" >> $GITHUB_ENV
          fi

      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Upload Release
        if: env.dist_empty == 'false'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/pdf-converter-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
          tag: v${{ steps.version.outputs.version }}
          overwrite: true
